{
  "permissions": {
    "allow": [
      "mcp__Azure-MCP-Server__subscription_list",
      "mcp__Azure-MCP-Server__group_list",
      "mcp__desktop-commander__list_directory",
      "mcp__Azure-MCP-Server__appservice",
      "mcp__Azure-MCP-Server__aks",
      "mcp__Azure-MCP-Server__postgres",
      "mcp__Azure-MCP-Server__redis",
      "Bash(az containerapp list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output json)",
      "Bash(az storage account list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output json)",
      "Read(//home/romiteld/Development/Web/**)",
      "Bash(az resource list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output table)",
      "Bash(az cognitiveservices account list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output table)",
      "mcp__desktop-commander__read_file",
      "Bash(az cosmosdb list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output table)",
      "Bash(az network vnet list --resource-group TheWell-Infra-East --subscription 3fee2ac0-3a70-4343-a8b2-3a98da1c9682 --output table)",
      "Bash(python3 -m pytest:*)",
      "Bash(docker build:*)",
      "Bash(az acr login:*)",
      "Bash(docker push:*)",
      "Bash(git log:*)",
      "mcp__brave-search__brave_web_search",
      "mcp__firecrawl__firecrawl_search",
      "mcp__desktop-commander__start_search",
      "Bash(az containerapp exec:*)",
      "Bash(az containerapp logs show:*)",
      "Bash(docker images:*)",
      "mcp__desktop-commander__get_more_search_results",
      "mcp__desktop-commander__edit_block",
      "mcp__desktop-commander__write_file",
      "Bash(az communication email:*)",
      "Bash(az communication email send:*)",
      "Bash(tree:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(pip install:*)",
      "Bash(python3:*)",
      "Bash(xargs ls:*)",
      "Bash(source zoho/bin/activate)",
      "Bash(pytest:*)",
      "Bash(az keyvault list:*)",
      "Bash(cat:*)",
      "Bash(for df in ./Dockerfile ./teams_bot/Dockerfile* ./resume_generator/Dockerfile)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(ls:*)",
      "Bash(awk:*)",
      "Bash(for df in ./Dockerfile ./teams_bot/Dockerfile ./teams_bot/Dockerfile.vault-worker ./teams_bot/Dockerfile.nlp-worker ./teams_bot/Dockerfile.digest-worker ./resume_generator/Dockerfile)",
      "Bash(do echo \"=== $df ===\" grep -E \"^FROM \" \"$df\")",
      "Bash(az account show:*)",
      "Bash(az resource list:*)",
      "Bash(az monitor metrics list-definitions:*)",
      "Bash(az storage account:*)",
      "Bash(az containerapp list:*)",
      "Bash(az postgres flexible-server show:*)",
      "Bash(az redis show:*)",
      "Bash(az servicebus namespace show:*)",
      "Bash(az containerapp show:*)",
      "Bash(az appservice plan show:*)",
      "Bash(az webapp list:*)",
      "Bash(git mv:*)",
      "Bash(xargs:*)",
      "Bash(git add:*)",
      "Bash(for account in wellattachments0903 wellcontent0903 wellintakefunc0903 wellintakestorage0903)",
      "Bash(az storage container list:*)",
      "Bash(az containerapp update:*)",
      "Bash(az servicebus namespace list:*)",
      "Bash(az servicebus queue list:*)",
      "Bash(az monitor metrics list:*)",
      "Bash(az servicebus namespace delete:*)",
      "Bash(az search service list:*)",
      "Bash(az search index list:*)",
      "Bash(psql:*)",
      "mcp__firecrawl__firecrawl_scrape",
      "Bash(curl:*)",
      "Bash(az containerapp revision list:*)",
      "Bash(az postgres flexible-server execute:*)",
      "Read(//tmp/**)",
      "Bash(md5sum:*)",
      "Bash(sed:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/home/romiteld/zoho"
    ]
  },
  "mcpServers": {
    "Azure MCP Server": {
      "command": "npx",
      "args": [
        "-y",
        "@azure/mcp@latest",
        "server",
        "start"
      ]
    },
    "desktop-commander": {
      "command": "npx",
      "args": [
        "-y",
        "@wonderwhy-er/desktop-commander@latest"
      ],
      "env": {
        "DC_ALLOWED_DIRECTORIES": "/mnt/c;/mnt/d;D:\\"
      }
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/mnt/c",
        "/mnt/d",
        "D:\\"
      ]
    },
    "excel": {
      "command": "npx",
      "args": [
        "--yes",
        "@negokaz/excel-mcp-server"
      ],
      "env": {
        "EXCEL_MCP_PAGING_CELLS_LIMIT": "4000"
      }
    },
    "firecrawl": {
      "command": "npx",
      "args": [
        "-y",
        "firecrawl-mcp"
      ],
      "env": {
        "FIRECRAWL_API_KEY": "fc-e59c9dc8113e484c9c1d6a75c49900a7"
      }
    },
    "context7": {
      "command": "npx",
      "args": [
        "-y",
        "@upthrust/context7-mcp"
      ]
    },
    "supabase": {
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase@latest",
        "--access-token",
        "sbp_300291c7fbe063233ce472b6c932f2272da9c406"
      ]
    },
    "puppeteer": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-puppeteer"
      ]
    },
    "postgres": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres",
        "postgresql://adminuser:W3llDB2025Pass@well-intake-db-0903.postgres.database.azure.com:5432/wellintake?sslmode=require"
      ]
    },
    "sequential-thinking": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ]
    },
    "memory": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ]
    },
    "mermaid-diagrams": {
      "command": "npx",
      "args": [
        "-y",
        "@chrishayuk/mcp-server-mermaid"
      ]
    },
    "cloudviz": {
      "command": "npx",
      "args": [
        "-y",
        "@fufuShih/mcp-server-cloudviz"
      ]
    },
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "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"
      }
    },
    "brave-search": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "BSAk4ivHUg97KJlBtqN5fTrgFDT3Gam"
      }
    },
    "google-drive": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gdrive"
      ]
    },
    "playwright": {
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/playwright-mcp-server"
      ]
    },
    "youtube": {
      "command": "npx",
      "args": [
        "-y",
        "@kimtaeyoon83/mcp-server-youtube-transcript"
      ]
    },
    "docker": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-docker"
      ]
    },
    "kubernetes": {
      "command": "npx",
      "args": [
        "-y",
        "@strowk/mcp-k8s-go"
      ]
    },
    "everything": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everything"
      ]
    },
    "stripe": {
      "command": "npx",
      "args": [
        "-y",
        "@stripe/mcp",
        "--tools=all",
        "--api-key=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"
      ]
    },
    "asana": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-asana"
      ],
      "env": {
        "ASANA_PERSONAL_ACCESS_TOKEN": ""
      }
    }
  }
}
