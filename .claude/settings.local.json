{
  "permissions": {
    "allow": [
      "Bash(az containerapp job execution:*)",
      "Bash(az containerapp job logs show:*)",
      "Bash(az communication list:*)",
      "Bash(az communication list-key:*)",
      "Bash(az containerapp job show:*)",
      "Bash(az containerapp job secret show:*)",
      "Bash(docker build:*)",
      "Bash(az acr login:*)",
      "Bash(docker push:*)",
      "Bash(az containerapp job update:*)",
      "Bash(az containerapp job start:*)",
      "Bash(az resource list:*)",
      "Bash(az communication email domain list:*)",
      "Bash(az communication email domain show:*)",
      "Bash(az communication show:*)",
      "Bash(az communication update:*)",
      "Bash(az monitor log-analytics query:*)",
      "Bash(az containerapp update:*)",
      "Bash(python3:*)",
      "Bash(curl:*)",
      "Bash(az containerapp logs show:*)",
      "Bash(echo \"Using revision: $REVISION\")",
      "Bash([ -n \"$API_KEY\" ])",
      "Bash(echo \"API key is set (length: $#API_KEY)\")",
      "Bash(gh pr:*)",
      "Bash(az containerapp revision list:*)",
      "Bash(python:*)",
      "Bash(cat:*)",
      "Bash(az containerapp job list:*)",
      "Bash(az containerapp show:*)",
      "Bash(az keyvault list:*)",
      "Bash(az keyvault secret list:*)",
      "Bash(az containerapp env show:*)",
      "mcp__cloudflare__accounts_list",
      "mcp__cloudflare__set_active_account",
      "mcp__cloudflare__search_cloudflare_documentation",
      "Bash(dig:*)",
      "Bash(az keyvault secret set:*)",
      "Bash(sed:*)",
      "Bash(timeout 10 az containerapp logs show:*)",
      "Bash(chmod:*)",
      "Bash(az containerapp list:*)",
      "Bash(PGPASSWORD='W3llDB2025Pass' psql:*)",
      "Bash(timeout 30 az containerapp logs show:*)",
      "Bash(source:*)",
      "Bash(pkill:*)",
      "Bash(tee:*)",
      "Bash(az redis show:*)",
      "Bash(az redis list:*)",
      "Bash(az redis list-keys:*)",
      "Bash(awk:*)",
      "Bash(PGPASSWORD='W3llDB2025Pass' psql -h well-intake-db-0903.postgres.database.azure.com -U adminuser -d wellintake -c \"SELECT twav_number, title, compensation FROM vault_candidates WHERE twav_number IN (''TWAV109867'', ''TWAV114860'', ''TWAV114861'', ''TWAV115377'', ''TWAV115967'');\")",
      "Bash(PGPASSWORD:*)",
      "Bash(az redis flush:*)",
      "Bash(xargs -r kill -9)",
      "Bash(jobs:*)",
      "Bash(kill:*)",
      "Bash(az account show:*)",
      "Bash(az:*)",
      "mcp__Azure-MCP-Server__get_bestpractices",
      "mcp__Azure-MCP-Server__documentation",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "mcp__firecrawl__firecrawl_search",
      "mcp__Azure-MCP-Server__subscription_list",
      "mcp__Azure-MCP-Server__group_list",
      "mcp__Azure-MCP-Server__appservice",
      "mcp__Azure-MCP-Server__functionapp",
      "mcp__Azure-MCP-Server__keyvault",
      "Read(//home/romiteld/Development/Desktop_Apps/**)",
      "Bash(AZURE_OPENAI_ENDPOINT=\"https://eastus2.api.cognitive.microsoft.com/\" )",
      "Bash(AZURE_OPENAI_KEY=\"a3dfd2487f074dd7aa46d61489a9b300\" )",
      "Bash(AZURE_OPENAI_DEPLOYMENT=\"gpt-5-mini\" )",
      "Bash(AZURE_OPENAI_API_VERSION=\"2024-08-01-preview\" )",
      "Bash(ZOHO_OAUTH_SERVICE_URL=\"https://well-zoho-oauth-v2.azurewebsites.net\" )",
      "Bash(HOST=\"0.0.0.0\" )",
      "Bash(PORT=\"8002\")",
      "mcp__firecrawl__firecrawl_scrape",
      "Bash(docker images:*)",
      "Bash(docker tag:*)",
      "Bash(echo $NEW_TAG)",
      "Bash(echo:*)",
      "Bash(pip install:*)",
      "Bash(ls:*)",
      "Bash(DATABASE_URL='postgresql://adminuser:W3llDB2025Pass@well-intake-db-0903.postgres.database.azure.com:5432/wellintake?sslmode=require' python3:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/home/romiteld/zoho"
    ]
  },
  "mcpServers": {
    "Azure MCP Server": {
      "command": "npx",
      "args": [
        "-y",
        "@azure/mcp@latest",
        "server",
        "start"
      ]
    },
    "desktop-commander": {
      "command": "npx",
      "args": [
        "-y",
        "@wonderwhy-er/desktop-commander@latest"
      ],
      "env": {
        "DC_ALLOWED_DIRECTORIES": "/mnt/c;/mnt/d;D:\\"
      }
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/mnt/c",
        "/mnt/d",
        "D:\\"
      ]
    },
    "excel": {
      "command": "npx",
      "args": [
        "--yes",
        "@negokaz/excel-mcp-server"
      ],
      "env": {
        "EXCEL_MCP_PAGING_CELLS_LIMIT": "4000"
      }
    },
    "firecrawl": {
      "command": "npx",
      "args": [
        "-y",
        "firecrawl-mcp"
      ],
      "env": {
        "FIRECRAWL_API_KEY": "fc-e59c9dc8113e484c9c1d6a75c49900a7"
      }
    },
    "context7": {
      "command": "npx",
      "args": [
        "-y",
        "@upthrust/context7-mcp"
      ]
    },
    "supabase": {
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase@latest",
        "--access-token",
        "sbp_300291c7fbe063233ce472b6c932f2272da9c406"
      ]
    },
    "puppeteer": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-puppeteer"
      ]
    },
    "postgres": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres",
        "postgresql://adminuser:W3llDB2025Pass@well-intake-db-0903.postgres.database.azure.com:5432/wellintake?sslmode=require"
      ]
    },
    "sequential-thinking": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ]
    },
    "memory": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ]
    },
    "mermaid-diagrams": {
      "command": "npx",
      "args": [
        "-y",
        "@chrishayuk/mcp-server-mermaid"
      ]
    },
    "cloudviz": {
      "command": "npx",
      "args": [
        "-y",
        "@fufuShih/mcp-server-cloudviz"
      ]
    },
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "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"
      }
    },
    "brave-search": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "BSAk4ivHUg97KJlBtqN5fTrgFDT3Gam"
      }
    },
    "google-drive": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gdrive"
      ]
    },
    "playwright": {
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/playwright-mcp-server"
      ]
    },
    "youtube": {
      "command": "npx",
      "args": [
        "-y",
        "@kimtaeyoon83/mcp-server-youtube-transcript"
      ]
    },
    "docker": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-docker"
      ]
    },
    "kubernetes": {
      "command": "npx",
      "args": [
        "-y",
        "@strowk/mcp-k8s-go"
      ]
    },
    "everything": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everything"
      ]
    },
    "stripe": {
      "command": "npx",
      "args": [
        "-y",
        "@stripe/mcp",
        "--tools=all",
        "--api-key=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"
      ]
    },
    "asana": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-asana"
      ],
      "env": {
        "ASANA_PERSONAL_ACCESS_TOKEN": ""
      }
    }
  }
}
